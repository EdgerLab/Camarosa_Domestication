#!/bin/bash -login

#SBATCH -J HTSeq
#SBATCH --time=02:00:00
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=2
#SBATCH --mem-per-cpu=10G
#SBATCH --array=1-84
#SBATCH --output=SubmissionScripts/ArrayHTSeq.%A_%a.log
#SBATCH --output=/mnt/research/edgerpat_lab/Scotty/Blueberry_RNA_Seq_Expression_Analysis/results/htseq/htseq_logs/ArrayHTSeq.%A_%a.log
#SBATCH -A general

module purge
module load GCCcore/11.3.0 Python/3.10.4
source /mnt/research/edgerpat_lab/Scotty/venvs/HTSeq/bin/activate

echo "My Task ID:" $SLURM_ARRAY_TASK_ID
OUTPUT_MAPPING_LOCATION='/mnt/research/edgerpat_lab/Scotty/Blueberry_RNA_Seq_Expression_Analysis/results/star_map/'
cd $OUTPUT_MAPPING_LOCATION
OUTPUT_FILENAME='TODO'

Read_Folder_Path=$(ls -d $PWD/* | sed -n ${SLURM_ARRAY_TASK_ID}p)
Read_Base=`basename $Read_Folder_Path` 

cd /mnt/research/edgerpat_lab/Scotty/Blueberry_RNA_Seq_Expression_Analysis/results/htseq/

# Paired end sequencing must be sorted by position or by read name

# New Htseq-count command
BIG_SAM='TODO'
ANNOTATION_FILE='TODO'
# Need two positional arguments that are the samfilenames and the GTF/GFF filename, it seems like I can provide multiple SAM files and this doesn't need to be an array job?
htseq-count $BIG_SAM $ANNOTATION_FILE --format sam --order name --stranded yes --type exon --idattr Parent --mode union --nonunique none --counts_output $OUTPUT_FILENAME

# TRY htseq-count -h

# Also need to check samtools sort --help


htseq-count --format=sam --order=name --stranded=yes --type=exon --idattr=Parent --mode=union ${Read_Folder_Path}/SortedSam.sam /mnt/research/edgerpat_lab/Scotty/Blueberry_RNA_Seq_Expression_Analysis/data/V_corymbosum_v1.0_geneModels.gff > ${Read_Base}_Results.count
gzip ${Read_Folder_Path}/SortedSam.sam
